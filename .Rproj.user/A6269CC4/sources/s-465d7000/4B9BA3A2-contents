---
title: "GEP_sticker"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_knit$set(root.dir = '/scratch/zuhu/project/BALL/GEP_prediction/')
```

```{r set}
rm(list=ls())
library(dplyr)
library(SummarizedExperiment)

source("/home/zgu_labs/bin/R/RNAseq/F_RNA.R")
source("/home/zuhu/bin/R/plots/F_plots.R")
# source("/home/zgu_labs/bin/R/SingleCell/F_sc.R")

cat()
```


```{r GEP prediction public tools}
#allspice
# df_allspice=bind_rows(
#   vroom::vroom("../GEP_prediction/out_allspice/df_AllspicePred_4350.tsv"),
#   vroom::vroom("../GEP_prediction/out_allspice/df_AllspicePred_chla.tsv"),
#   vroom::vroom("../GEP_prediction/out_allspice/df_AllspicePred_Allsorts.tsv")
# ) 
# 
# names(df_allspice)=paste0(names(df_allspice),"_Allspice")
# 
# df_allspice1=df_allspice %>% mutate(COH_sample=Sample_id_Allspice) %>% 
#   select(COH_sample,CATEG_Allspice,MATCH_Allspice,MATCH.2nd_Allspice,FREQ_Allspice,FREQ.2nd_Allspice,LABEL_Allspice)

#allsorts
# df_allsorts=bind_rows(
#   vroom::vroom("../GEP_prediction/out_allsorts/4350/predictions.csv"),
#   vroom::vroom("../GEP_prediction/out_allsorts/CHLA/predictions.csv"),
#   vroom::vroom("../GEP_prediction/out_allsorts/allSorts_testingData/predictions.csv")
# )
# 
# names(df_allsorts)=paste0(names(df_allsorts),"_Allsorts")
# head(df_allsorts)
# df_allsorts1=df_allsorts %>% mutate(COH_sample=sample_id_Allsorts) %>% select(COH_sample,Prediction_Allsorts)

#allcatchr
# df_allcatchr=bind_rows(
#   vroom::vroom("../GEP_prediction/out_allcatchr/allcatchr.4350.tsv"),
#   vroom::vroom("../GEP_prediction/out_allcatchr/allcatchr.CHLA.tsv"),
#   vroom::vroom("../GEP_prediction/out_allcatchr/allcatchr.allSortsTestingData.tsv")
# ) 
# names(df_allcatchr)=paste0(names(df_allcatchr),"_AllcatchR")
# 
# df_allcatchr1=df_allcatchr %>% 
#   mutate(COH_sample=sample_AllcatchR) %>% 
#   select(COH_sample,Score_AllcatchR,Prediction_AllcatchR,Confidence_AllcatchR,BlastCounts_AllcatchR,Sex_AllcatchR,Immuno_AllcatchR)

#autogluon 
# df_autogluon=read_tsv("id/df_autogluon_2955.tsv") %>% 
#   gather('BCL2.MYC','CDX2.UBTF','DUX4','ETV6..RUNX1','HLF','Hyperdiploid','IKZF1.N159Y',
#          'KMT2A','Low.hypodiploid','MEF2D','NUTM1','PAX5.P80R','PAX5..ETV6','PAX5alt',
#          'Ph.Ph.like','TCF3..PBX1','ZEB2.CEBP','ZNF384','iAMP21',
#          key=sutype,value=score) %>% 
#   mutate(
#     COH_sample=sample.ID,
#     pred_autoGluon=ifelse(sutype=="BCL2.MYC","BCL2/MYC",
#                   ifelse(sutype=="CDX2.UBTF","CDX2/UBTF",
#                          ifelse(sutype=="ETV6..RUNX1","ETV6::RUNX1",
#                                 ifelse(sutype=="IKZF1.N159Y","IKZF1 N159Y",
#                                        ifelse(sutype=="Low.hypodiploid","Low hypodiploid",
#                                               ifelse(sutype=="PAX5..ETV6","PAX5::ETV6",
#                                                      ifelse(sutype=="PAX5.P80R","PAX5 P80R",
#                                                             ifelse(sutype=="Ph.Ph.like","Ph",
#                                                                    ifelse(sutype=="TCF3..PBX1","TCF3::PBX1",
#                                                                           ifelse(sutype=="ZEB2.CEBP","ZEB2/CEBP",sutype)))))))))),
#     score_autoGluon=score,
#     score=as.numeric(score),
#     diag_score=paste0(pred_autoGluon,"(",score,")")
#   ) %>% filter(!score==0) %>% arrange(COH_sample) %>% 
#   group_by(COH_sample) %>% arrange(COH_sample,desc(score)) %>% 
#   mutate(pred_score_autogluon=paste0(diag_score,collapse = "|")) %>% 
#   slice_head(n=1) %>% 
#   select(COH_sample,pred_autoGluon,score_autoGluon,pred_score_autogluon)



# write_tsv(df_pred_all_,"../GEP_prediction/df_out_publicTools.tsv")


#MDALL


cat()
```

```{r GEP prediction}

df_pred_phenograph=vroom::vroom("../GEP_prediction/out_1843/stats/phenographPred_set.tsv") %>% 
  transmute(COH_sample=COH_sample,pred_phenograph=pred,score_phenograph=score,pred_score_phenograph=pred_score)

df_pred_umap=vroom::vroom("../GEP_prediction/out_1843/stats/umapPred_set.tsv") %>% 
  transmute(COH_sample=COH_sample,pred_umap=pred,score_umap=score,pred_score_umap=pred_score)

df_pred_svm=vroom::vroom("../tsne/1843/svmSummsize/svm_set.1843.tsv") %>%
  transmute(COH_sample=COH_sample,pred_svm=genes_1366_coding,score_svm=genes_1366_coding.score,pred_score_svm=genes_1366_coding.predScore)


df_pred_svmLeaveOneOut1=read_tsv("../tsne/1843/svm_leaveOneOut_sum/svm_leaveOneOut_set_sum.tsv") %>%
  transmute(COH_sample=COH_sample,pred_svm=genes_1366_coding,score_svm=genes_1366_coding.score,pred_score_svm=genes_1366_coding.predScore)

df_pred_svmLeaveOneOut2=read_tsv("../tsne/1852/svm_leaveOneOut_sum/svm.pred.set.sum.tsv") %>%
  transmute(COH_sample=COH_sample,pred_svm=genes_1366_coding,score_svm=genes_1366_coding.score,pred_score_svm=genes_1366_coding.predScore)

df_pred_svmLeaveOneOut=bind_rows(df_pred_svmLeaveOneOut1,df_pred_svmLeaveOneOut2)

df_pred_svmLeaveOneOut=bind_rows(
  df_pred_svm %>% filter(!COH_sample %in% df_pred_svmLeaveOneOut$COH_sample),df_pred_svmLeaveOneOut
) 

names(df_pred_svmLeaveOneOut)[2:4]=paste0(names(df_pred_svmLeaveOneOut)[2:4],".LOO")

df_pred_MDALL=df_pred_publicTools %>% select(COH_sample,PrimarySubtype,Prediction_AllcatchR_new) %>%  left_join(df_pred_phenograph) %>% 
  left_join(df_pred_umap) %>% left_join(df_pred_svm) %>% left_join(df_pred_svmLeaveOneOut)

write_tsv(df_pred_MDALL,"../GEP_prediction/df_out_MDALL.tsv")

```

```{r Prepare dataset}

# diag_minor=c('CDX2/UBTF','HLF','IKZF1 N159Y','ZEB2/CEBP','NUTM1','PAX5::ETV6','BCL2/MYC')

# 
# info_1821=read_tsv("../tsne/1821/df_info_1821.tsv")
# 
# df_info_base=read_tsv("../GEP_prediction/prediction_plots/df_info_base.tsv") %>%
#   mutate(inTesting=ifelse(inGoldRef=="Yes","No","Yes"),
#          diag=ifelse(primary.subtype=="Ph-like","Ph",primary.subtype),
#          diag_raw=primary.subtype,
#          diag_mask=get_diag_mask(diag))
# 
# df_test=df_info_base %>%
#   filter(inGoldRef=="No" | diag %in% diag_minor) %>%
#   filter(!diag %in% c("CRLF2(non-Ph-like)","Other","PAX5alt,Ph-like","Ph-like,iAMP21","Near haploid","Low hyperdiploid")) %>%
#   filter(!COH_sample %in% c("COH000825_D1","COH004817_D1")) %>%
#   filter(
#     !(diag_raw %in% c("Ph-like",'PAX5alt') & real_Ph.like_PAX5alt=="No")
#   )
# 
# table(df_info_base$diag_raw)
# 
# 
# df_info_base=df_info_base %>% mutate(inTesting=ifelse(COH_sample %in% df_test$COH_sample,"Yes","No"),
#                                      goldRef_testing=ifelse(inTesting=="Yes" & inGoldRef=="Yes","3.both",
#                                                             ifelse(inTesting=="Yes","2.testing_only",
#                                                                    ifelse(inGoldRef=="Yes","1.goldRef_only",
#                                                                           ifelse(inTesting=="No" & inGoldRef=="No","4.notUsed",NA)))),
#                                      goldRef_testing=ifelse(goldRef_testing=="4.notUsed","2.testing_only",goldRef_testing)
#                                      )

# write_tsv(df_info_base,"../GEP_prediction/prediction_plots/df_info_base.tsv")

df_pred_all_= read_tsv("../GEP_prediction/prediction_plots/df_info_base.tsv")  %>% 
  left_join(read_tsv("../GEP_prediction/prediction_plots/df_pred_publicTools.tsv")) %>% 
  left_join(read_tsv("../GEP_prediction/prediction_plots/df_pred_MDALL.tsv")) 

table(df_pred_all_$inTesting)
table(df_pred_all_$goldRef_testing)

df_pred_NH=df_pred_all_ %>% filter(diag_raw=="Near haploid")
df_pred_iAMP21=df_pred_all_ %>% filter(diag_raw=="iAMP21")

table(df_pred_iAMP21$diag_raw)
table(df_pred_iAMP21$pred_svm.LOO)

```


```{r Get information for the 234 ref samples}
df_info_234=as.data.frame(colData(obj_234_HTSeq$SE))

df_info_234$COH_sample=row.names(df_info_234) 
df_info_234=df_info_234 %>% 
  left_join(df_pred_all_ %>% select(COH_sample,primary.subtype,diag_raw,library,library_1)) %>% 
  select(COH_sample,library,primary.subtype)

write_tsv(df_info_234,"../GEP_prediction/prediction_plots/df_info_234.tsv")


```


```{r get sen spe plot,fig.height=5,fig.width=20 }
#get sensitivity and specificity plot
df_pred_ref=df_pred_all_ %>% filter(inGoldRef=="Yes")
df_pred_test=df_pred_all_ %>% 
  filter(inTesting %in% c("Yes"))

table(df_pred_test$diag_raw)

table(df_pred_test$diag_raw,df_pred_test$diag_mask)

table(df_pred_test$Prediction_AllcatchR)
table(df_pred_test$diag_mask)


indata=df_pred_test
x="diag_mask"
y_list=c("pred_AllcatchR_mask","pred_Allsorts_mask","pred_phenograph","pred_svm.LOO")
level_list=unique(df_pred_ref$diag)

df_sen_spe=
  bind_rows(lapply(level_list, function(level){
    print(level)
    bind_rows(lapply(y_list, function(y){
      print(y)
      cal_sensitivity_specificity(indata,x = x,y,level)
    }))
  })) %>% 
  gather("sensitivity","specificity",key="sen_spe",value="value") %>% 
  mutate(y1=ifelse(y=="pred_phenograph","1.pred_phenograph",
                  ifelse(y=="pred_svm.LOO","2.pred_svm.LOO",
                         ifelse(y=="pred_AllcatchR_mask","3.pred_AllcatchR_mask",
                                ifelse(y=="pred_Allsorts_mask","4.pred_Allsorts_mask",NA)))))

df_freq=df_test %>% transmute(level=diag_mask) %>% group_by(level) %>% mutate(n=n(),diag_n=paste0(level,"\n(N=",n,")")) %>% distinct()

df_sen_spe1=df_sen_spe %>% filter(sen_spe=="sensitivity") %>% 
  group_by(`level`) %>% mutate(score=mean(value)) %>% select(level,score) %>% distinct() %>% arrange(score)


diag_rank=data.frame(
  level= c('iAMP21','Ph','NUTM1','PAX5alt','Hyperdiploid','BCL2/MYC','ETV6::RUNX1','KMT2A','ZEB2/CEBP','Low hypodiploid','CDX2/UBTF','DUX4','HLF','IKZF1 N159Y','MEF2D','PAX5 P80R','TCF3::PBX1','ZNF384','PAX5::ETV6'),
  level1=c('01.iAMP21','09.Ph','05.NUTM1','02.PAX5alt','03.Hyperdiploid','06.BCL2/MYC','08.ETV6::RUNX1','07.KMT2A','17.ZEB2/CEBP','10.Low hypodiploid','18.CDX2/UBTF','12.DUX4','13.HLF','14.IKZF1 N159Y','15.MEF2D','16.PAX5 P80R','17.TCF3::PBX1','11.ZNF384','19.PAX5::ETV6'),
  stringsAsFactors = F
)

df_sen_spe_=df_sen_spe %>% left_join(diag_rank) %>% left_join(df_freq)

write_tsv(df_sen_spe_,"../GEP_prediction/prediction_plots/df_sen_spe.tsv")

x_labels=df_sen_spe_ %>% select(level1,diag_n) %>% distinct() %>% arrange(level1)

col_in=c("#66C2A6","#FFA620","#1E90FF","#E6BEFF")
names(col_in)=c("1.pred_phenograph","2.pred_svm.LOO","3.pred_AllcatchR_mask","4.pred_Allsorts_mask")

ggplot(data=df_sen_spe_, aes(x=level1, y=value, fill=y1)) +
  geom_bar(stat="identity", position=position_dodge()) +
  geom_text(data=df_sen_spe_ %>% mutate(value1=ifelse(value==1,"",sprintf("%.3f",value))), aes(label = value1),colour="white",hjust = 1.2, size=3,angle = 90,position = position_dodge(.9))+
  scale_fill_manual(values = col_in) +
  scale_x_discrete(labels =x_labels$diag_n)+
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        panel.background = element_rect(color="black",fill="white"),
        axis.line = element_line(colour = "black")
        )+
  facet_wrap(sen_spe~.,ncol=1,strip.position = "right")

ggsave("../GEP_prediction/prediction_plots/sen_spe.pdf",height = 5,width = 20)
cat()
```


```{r Calculate accuracy}
get_predLabel=function(x){ifelse(as.numeric(word(x,2,sep="[(|)]"))>0.5,word(x,1,sep=","),"Unclassified")}

df_pred_test1=df_pred_test %>% 
  mutate(pred_svm.LOO_final=get_predLabel(pred_score_svm.LOO),
         pred_phenograph_final=get_predLabel(pred_score_phenograph))

table(df_pred_test1$pred_svm.LOO_final==df_pred_test1$diag_mask)
table(df_pred_test1$pred_phenograph_final==df_pred_test1$diag_mask)
936/974
903/974

table(df_pred_test1$pred_svm.LOO==df_pred_test1$diag_mask)
table(df_pred_test1$pred_phenograph==df_pred_test1$diag_mask)
937/974
904/974

write_tsv(df_pred_test1,"../GEP_prediction/prediction_plots/df_test_974.tsv")

```


```{r get tile plot,fig.height=10,fig.width=25}
diag_freq=df_pred_all_ %>% select(diag_raw) %>% group_by(diag_raw) %>% mutate(n=n()) %>% distinct() %>% arrange(n)

df_pred_all_1=df_pred_all_ %>% 
  group_by(diag_raw) %>% mutate(n_diag=n(),age.group=ifelse(age.group=="","NA",age.group)) %>% 
  group_by(inferred_ethnicity) %>% mutate(n_race=n()) %>% 
  mutate(pred_svm.LOO1=ifelse(pred_svm.LOO==diag_mask,paste0("0.",pred_svm.LOO),
                              ifelse(pred_svm.LOO=="Ph","1.Ph",
                                     ifelse(pred_svm.LOO=="PAX5alt","2.PAX5alt",pred_svm.LOO)))) %>% 
  mutate(pred_phenograph1=ifelse(pred_phenograph==diag_mask,paste0("0.",pred_phenograph),
                                 ifelse(pred_phenograph=="Ph","1.Ph",
                                        ifelse(pred_phenograph=="PAX5alt","2.PAX5alt",pred_phenograph)))) %>% 
  arrange(desc(n_diag),diag_raw,pred_svm.LOO1,pred_phenograph1,goldRef_testing,RNAseqCNV.gender,age.group,desc(n_race),COH_sample) %>% 
  ungroup() %>% mutate(obs=1:n())

unique(df_pred_all_1$goldRef_testing)

df_for_tile=bind_rows(
  df_pred_all_1 %>% transmute(obs=obs,group=diag_raw,strata="1.Subtypes"),
  df_pred_all_1 %>% transmute(obs=obs,group=pred_svm.LOO,strata="1.Subtypes_SVM.Predicted"),
  df_pred_all_1 %>% transmute(obs=obs,group=pred_phenograph,strata="2.Subtypes_Phenograph.Predicted"),
  df_pred_all_1 %>% transmute(obs=obs,group=goldRef_testing,strata="3.goldRef_testing"),
  df_pred_all_1 %>% transmute(obs=obs,group=RNAseqCNV.gender,strata="5.gender"),
  df_pred_all_1 %>% transmute(obs=obs,group=age.group,strata="6.age.group"),
  df_pred_all_1 %>% transmute(obs=obs,group=inferred_ethnicity,strata="7.race"),

)
write_tsv(df_for_tile,"../GEP_prediction/prediction_plots/df_for_tile.tsv")

gg_tilePlot(df_in = df_for_tile,x = "obs",y = "strata",var_col = "group",cols = subtypeCol,reverse_y = T,add_horizontal = T)
ggsave("../GEP_prediction/prediction_plots/tileplot.pdf",height = 5,width = 20)

cat()

```


```{r Get pred score matrix}
df_for_scoreMatrix=df_pred_all_ %>% 
  select(COH_sample,primary.subtype,diag,diag_raw,diag_mask,pred_svm.LOO,pred_score_svm.LOO,pred_phenograph,pred_score_phenograph)

list_NA2zero=as.list(rep(0,19))
names(list_NA2zero)=unique(df_for_scoreMatrix$pred_svm.LOO)

#SVM
df_scoreMatrix_svm=df_for_scoreMatrix %>% select(COH_sample,pred_svm.LOO,pred_score_svm.LOO) %>% 
  separate_rows(pred_score_svm.LOO,sep="[|]") %>% 
  mutate(pred=word(pred_score_svm.LOO,1,sep=","),
         score=as.numeric(word(pred_score_svm.LOO,2,sep="[()]")),
         pred_score_svm.LOO=NULL
  ) %>% spread(pred,score) %>% replace_na(list_NA2zero) %>% arrange(COH_sample)
write_tsv(df_scoreMatrix_svm,"../GEP_prediction/scrore_matrix/df_scoreMatrix_svm_2955.tsv")
  
#Phenograph
df_scoreMatrix_phenograph=df_for_scoreMatrix %>% select(COH_sample,pred_phenograph,pred_score_phenograph) %>% 
  separate_rows(pred_score_phenograph,sep="[|]") %>% 
  mutate(pred=word(pred_score_phenograph,1,sep=","),
         score=as.numeric(word(pred_score_phenograph,2,sep="[()]")),
         pred_score_phenograph=NULL
  ) %>% spread(pred,score) %>% replace_na(list_NA2zero) %>% 
  mutate(NoClusterAsigned=NULL) %>% arrange(COH_sample)
write_tsv(df_scoreMatrix_phenograph,"../GEP_prediction/scrore_matrix/df_scoreMatrix_phenograph_2955.tsv")

#allcatchr
df_all_catchr=read_tsv("../GEP_prediction/out_allcatchr/allcatchr.4350.tsv")
df_all_catchr1=df_all_catchr[c("sample",names(df_all_catchr)[grepl("ML_",names(df_all_catchr))])]
names(df_all_catchr1)=c(
  'COH_sample','ZNF384','TCF3::PBX1','Ph','Ph-like','PAX5alt','PAX5 P80R','NUTM1','Near haploid','MEF2D','Low hypodiploid','KMT2A','IKZF1 N159Y','iAMP21','Hyperdiploid','HLF','ETV6::RUNX1-like','ETV6::RUNX1','DUX4','ZEB2/CEBP','CDX2/UBTF','BCL2/MYC'
)

write_tsv(df_all_catchr1,"../GEP_prediction/scrore_matrix/df_scoreMatrix_ALLCatchr_4350.tsv")

#allsorts
df_allsorts=read.csv("../GEP_prediction/out_allsorts/4350/probabilities.csv",stringsAsFactors = F) 

names(df_allsorts)=c(
  'COH_sample','TCF3::PBX1','KMT2A','DUX4','PAX5alt','MEF2D','ZNF384','BCL2/MYC','iAMP21','PAX5 P80R','NUTM1','Low hypodiploid','IKZF1 N159Y','HLF','Hyperdiploid','Low hyperdiploid','Near haploid','Ph','Ph-like','ETV6::RUNX1','ETV6::RUNX1-like','Pred'
)

write_tsv(df_allsorts,"../GEP_prediction/scrore_matrix/df_scoreMatrix_ALLSorts_4350.tsv")

```

```{r get ridge plot,fig.height=12,fig.width=20}
library(ggridges)

df_diag=df_pred_all_ %>% select(COH_sample,diag_mask,diag_raw)

levels_all=sort(unique(df_diag$diag_raw))

df_matrix_allsorts=vroom::vroom("../GEP_prediction/scrore_matrix/df_scoreMatrix_ALLSorts_4350.tsv")
df_matrix_allcatchr=vroom::vroom("../GEP_prediction/scrore_matrix/df_scoreMatrix_ALLCatchr_4350.tsv")
df_matrix_svm=vroom::vroom("../GEP_prediction/scrore_matrix/df_scoreMatrix_svm_2955.tsv")
df_matrix_phenograph=vroom::vroom("../GEP_prediction/scrore_matrix/df_scoreMatrix_phenograph_2955.tsv")

get_ridgePlotDf=function(indata,var_base="diag_raw"){
  levels_in=names(indata)[names(indata) %in% levels_all]
  
  indata1=df_diag %>% left_join(indata)
  
  df_out=bind_rows(lapply(levels_in, function(level){
    df_one=indata1[c(var_base,level)]
    names(df_one)=c("var_base","score")
    df_one=df_one %>% mutate(group_ridge=ifelse(var_base==level,"Subtype","Not subtype"),
                             x_tick=case_when(
                               score>=0.00 & score<0.05 ~ "0.00-0.05",
                               score>=0.05 & score<0.15 ~ "0.05-0.15",
                               score>=0.15 & score<0.25 ~ "0.15-0.25",
                               score>=0.25 & score<0.35 ~ "0.25-0.35",
                               score>=0.35 & score<0.45 ~ "0.35-0.45",
                               score>=0.45 & score<0.55 ~ "0.45-0.55",
                               score>=0.55 & score<0.65 ~ "0.55-0.65",
                               score>=0.65 & score<0.75 ~ "0.65-0.75",
                               score>=0.75 & score<0.85 ~ "0.75-0.85",
                               score>=0.85 & score<0.95 ~ "0.85-0.95",
                               score>=0.95 & score<=1    ~ "0.95-1.00"
                             ),
                             level=level) %>% group_by(group_ridge,x_tick) %>% 
      mutate(n_g=n()) %>% ungroup() %>% select(level,group_ridge,x_tick,n_g) %>% distinct()
    df_one
  }))
  df_out
}

df_ridge_allsorts=get_ridgePlotDf(df_matrix_allsorts) %>% mutate(method="04.ALLSorts")
df_ridge_allcatchr=get_ridgePlotDf(df_matrix_allcatchr) %>% mutate(method="03.ALLCatchR")
df_ridge_svm=get_ridgePlotDf(df_matrix_svm,var_base = "diag_mask") %>% mutate(method="02.SVM")
df_ridge_phenograph=get_ridgePlotDf(df_matrix_phenograph,var_base = "diag_mask") %>% mutate(method="01.Phenograph")

df_for_ridge_=bind_rows(df_ridge_allsorts,df_ridge_allcatchr,df_ridge_svm,df_ridge_phenograph)
write_tsv(df_for_ridge_,"../GEP_prediction/prediction_plots/df_for_ridge.tsv")

gg_ridgePlot2=function(indata,title="RidgePlot2"){
  ggplot(data = indata,aes(x=x_tick,y=n_g,fill=group_ridge))+
    geom_bar(stat="identity",position="fill",width = 0.7)+
    facet_wrap(~level,ncol=1,strip.position="left")+
    theme(panel.grid.major = element_blank(), 
          panel.grid.minor = element_blank(),
          panel.background = element_blank(), 
          
          axis.text.y = element_blank(),axis.ticks.y = element_blank(),
          axis.text.x = element_text(angle=45,hjust = 1),
          
          axis.line.x = element_line(colour = "black"),
          strip.background.y = element_rect(fill="white"),
          strip.text.y.left = element_text(angle=0,hjust=1),
          legend.position = "bottom")+
    scale_fill_manual(values=c("skyblue", "orange"))+
    labs(title=title)
}

p1=gg_ridgePlot2(df_ridge_phenograph,"01.Phenograph")
p2=gg_ridgePlot2(df_ridge_svm,"02.SVM")
p3=gg_ridgePlot2(df_ridge_allcatchr,"03.ALLCatchR")
p4=gg_ridgePlot2(df_ridge_allsorts,"04.ALLSorts")

legend=get_legend(p1)

plot_grid(p1,p2,p3,p4,
          nrow = 1)

ggsave("../GEP_prediction/prediction_plots/ridge_plot_6-20_.pdf",height = 6,width = 20)


cat()
```


```{r Tile plot for each sample}
#SVM
# df_pred_svm=vroom::vroom("../tsne/1843/svmSummsize/svm_set.1843.tsv")
# df_pred_svm=df_pred_svm[c("COH_sample",names(df_pred_svm)[91:101])]
# names(df_pred_svm)=gsub("genes_1366_coding_","",names(df_pred_svm))
# 
# df_pred_svmLeaveOneOut1=read_tsv("../tsne/1843/svm_leaveOneOut_sum/svm_leaveOneOut_set_sum.tsv")
# df_pred_svmLeaveOneOut1=df_pred_svmLeaveOneOut1[c("COH_sample",names(df_pred_svmLeaveOneOut1)[5:15])]
# names(df_pred_svmLeaveOneOut1)=gsub("genes_1366_coding_","",names(df_pred_svmLeaveOneOut1))
# 
# df_pred_svmLeaveOneOut2=read_tsv("../tsne/1852/svm_leaveOneOut_sum/svm.pred.set.sum.tsv")
# df_pred_svmLeaveOneOut2=df_pred_svmLeaveOneOut2[c("COH_sample",names(df_pred_svmLeaveOneOut2)[5:15])]
# names(df_pred_svmLeaveOneOut2)=gsub("genes_1366_coding_","",names(df_pred_svmLeaveOneOut2))
# 
# df_pred_svmLeaveOneOut=bind_rows(df_pred_svmLeaveOneOut1,df_pred_svmLeaveOneOut2)
# 
# df_pred_svmLeaveOneOut=bind_rows(
#   df_pred_svm %>% filter(!COH_sample %in% df_pred_svmLeaveOneOut$COH_sample),
#   df_pred_svmLeaveOneOut
# )  %>% mutate(method="SVM")

#PhenoGraph
# df_pred_phenograph=vroom::vroom("../GEP_prediction/out_1843/stats/phenographPred_set.tsv")
# df_pred_phenograph1=df_pred_phenograph[c("COH_sample",names(df_pred_phenograph)[10:20])] %>%
#   filter(COH_sample %in% df_pred_svmLeaveOneOut$COH_sample) %>%
#   mutate(method="Phenograph")
# names(df_pred_phenograph1)=gsub("Feature","",names(df_pred_phenograph1))

#df SVM PhenoGraph
# df_MDALL=bind_rows(df_pred_svmLeaveOneOut,df_pred_phenograph1)
# write_tsv(df_MDALL,"../GEP_prediction/Sample_tilePlot/df_for_sampleTilePlot.tsv")

df_MDALL=read_tsv("../GEP_prediction/Sample_tilePlot/df_for_sampleTilePlot.tsv")


df_MDALL1=df_MDALL %>% reshape2::melt(id.vars=c("COH_sample","method")) %>% 
  mutate(N=as.numeric(gsub("N","",variable)),
         N1=as.character(N),
         N2=sprintf("%04d",N),
         value=word(value,1,sep="[()]")) %>% 
  group_by(COH_sample) %>% 
  arrange(COH_sample,N)


COH_sample_="COH000066_D1"

for(COH_sample_ in unique(df_MDALL$COH_sample)){
  print(COH_sample_)
  print(match(COH_sample_,unique(df_MDALL$COH_sample)))

  df_one=df_MDALL1 %>% filter(COH_sample==COH_sample_)
  
  gg_tilePlot(df_in = df_one,x = "N2",y = "method",var_col = "value",add_border = T,border_lwd = 0.2,border_color = "white",
              squared = T,x_lab = "Number of features",y_lab = "Methods",x_tick_label_var = "N1",legend_lab = "Subtype: ")
  
  ggsave(paste0("../GEP_prediction/Sample_tilePlot/",COH_sample_,"_PredTilePlot.pdf"),width = 6,height = 2)
  ggsave(paste0("../GEP_prediction/Sample_tilePlot/",COH_sample_,"_PredTilePlot.png"),width = 6,height = 2)
}

cat()
```



```{r confusionMatrix,fig.width=11,fig.height=17}
df_in=read_tsv("../GEP_prediction/prediction_plots/df_test_974.tsv")

table(df_in$diag_raw)

gg_confusionMatrix=function(df_in,x ,y ,
                            y_lab=NULL,x_lab=NULL,
                            y_tick_label_var=NULL,
                            reverse_y=T,reverse_x=F,
                            text.size=3,
                            squared =F,
                            title="Confusion Matrix",
                            legend_title="N"
){
  #get lab
  if(is.null(y_lab)){y_lab=""}
  if(is.null(x_lab)){x_lab=""}
  if(is.null(title)){title=NULL}
  
  df_in1=df_in[c(x,y)]
  names(df_in1)=c("x","y")
  
  df_in2=df_in1 %>% group_by(x,y) %>% mutate(n_g=n()) %>% distinct() 
  df_in3=df_in2 %>% pivot_wider(names_from = "x",values_from="n_g")
  
  zero_list=as.list(rep(0,ncol(df_in3)-1))
  names(zero_list)=names(df_in3)[2:ncol(df_in3)]
  
  df_in3=df_in3 %>% replace_na(zero_list) %>% reshape2::melt(id.vars=c("y"),variable.name="x",value.name="n_g") %>% 
    mutate(x=as.character(x))

    p1=ggplot() + 
    geom_tile(data=df_in3, aes(x=x, y=y),fill="white") +
    geom_tile(data=df_in2, aes(x=x, y=y,fill=n_g)) +
    geom_text(data=df_in3, aes(x=x, y=y,label = n_g), color = "grey90",size=text.size)+
    geom_text(data=df_in2, aes(x=x, y=y,label = n_g), color = "black",size=text.size)+
    
    scale_fill_gradientn(colours=c("#D3DDDC","dodgerblue","darkgoldenrod2","gold2")) +
    labs(title = title)+
    xlab(x_lab) +   
    ylab(y_lab) +
    theme(panel.grid.major = element_blank(), 
          panel.grid.minor = element_blank(),
          panel.background = element_blank(), 
          axis.ticks = element_blank(),
          axis.text.x=element_text(angle = 45,hjust=1),
          legend.position = "bottom")    +
    guides(fill = guide_colourbar(ticks = FALSE,title.position = "top",title.hjust = 0.5,title = legend_title))
  
  
  if(reverse_y){p1=p1 + scale_y_discrete(limits = rev(sort(unique(df_in3$y))))}
  if(reverse_x){p1=p1 + scale_x_discrete(limits = rev(sort(unique(df_in3$x))))}
  
  if(squared){p1=p1+coord_fixed()}
  
  p1
}

#svm 
df_confusion_svm=df_in %>% mutate(pred_svm.LOO_final=ifelse(pred_svm.LOO_final=="Unclassified","ZZ.Unclassified",pred_svm.LOO_final))
df_confusion_svm1=df_confusion_svm %>% filter(!pred_svm.LOO_final=="ZZ.Unclassified")
nrow(df_confusion_svm1)

table(df_confusion_svm1$pred_svm.LOO_final==df_confusion_svm1$diag_mask)
936/971
p1=gg_confusionMatrix(df_in = df_confusion_svm,
                      x = "pred_svm.LOO_final",y = "diag_mask",
                      y_lab = "Reference",x_lab = "Predicted",title = "SVM (n=974)")

#phenoGraph
df_confusion_phenograph=df_in %>% mutate(pred_phenograph_final=ifelse(pred_phenograph_final=="Unclassified","ZZ.Unclassified",pred_phenograph_final))
df_confusion_phenograph1=df_confusion_phenograph %>% filter(!pred_phenograph_final=="ZZ.Unclassified")
nrow(df_confusion_phenograph1)

table(df_confusion_phenograph1$pred_phenograph_final==df_confusion_phenograph1$diag_mask)
903/972

p2=gg_confusionMatrix(df_in = df_in %>% mutate(pred_phenograph_final=ifelse(pred_phenograph_final=="Unclassified","ZZ.Unclassified",pred_phenograph_final)),
                      x = "pred_phenograph_final",y = "diag_mask",
                      y_lab = "Reference",x_lab = "Predicted",title = "PhenoGraph (n=974)")

#ALL CatchR
levels_AllcatchR=c(unique(df_in$Prediction_AllcatchR_new),"ZNF384-like","KMT2A-like")

df_confusion_allcatchr=df_in %>% filter(diag_raw %in% levels_AllcatchR) %>% 
  mutate(Prediction_AllcatchR_new1=ifelse(Prediction_AllcatchR_new=="ZNF384-like","ZNF384",
                                          ifelse(Prediction_AllcatchR_new=="KMT2A-like","KMT2A",
                                                 ifelse(Confidence_AllcatchR=="unclassified","ZZ.Unclassified",Prediction_AllcatchR_new))),
         diag_raw_allcatchr=ifelse(diag_raw=="ZNF384-like","ZNF384",ifelse(diag_raw=="KMT2A-like","KMT2A",diag_raw)))

df_confusion_allcatchr1=df_confusion_allcatchr %>% filter(!Prediction_AllcatchR_new1=="ZZ.Unclassified")
nrow(df_confusion_allcatchr1)

table(df_confusion_allcatchr1$Prediction_AllcatchR_new1==df_confusion_allcatchr1$diag_raw_allcatchr)
859/915


p3=gg_confusionMatrix(df_in = df_confusion_allcatchr,
                   x = "Prediction_AllcatchR_new1",y = "diag_raw_allcatchr",
                   y_lab = "Reference",x_lab = "Predicted",title = paste0("AllcatchR (n=",nrow(df_confusion_allcatchr),")"))


#ALL sorts
levels_allsorts=c(unique(df_in$Prediction_Allsorts_new),"ZNF384-like","KMT2A-like")

df_confusion_allsorts=df_in %>% filter(diag_raw %in% levels_allsorts) %>% 
                        filter(!Prediction_Allsorts_new %in% c("Low hyperdiploid")) %>% 
                        mutate(Prediction_Allsorts_new1=ifelse(Prediction_Allsorts_new=="Unclassified","ZZ.Unclassified",
                                                               ifelse(Prediction_Allsorts_new=="ZNF384-like","ZNF384",
                                                                      ifelse(Prediction_Allsorts_new=="KMT2A-like","KMT2A",Prediction_Allsorts_new))),
         diag_raw_allsorts=ifelse(diag_raw=="ZNF384-like","ZNF384",ifelse(diag_raw=="KMT2A-like","KMT2A",diag_raw)))

table(df_confusion_allsorts$Prediction_Allsorts_new==df_confusion_allsorts$diag_raw)

df_confusion_allsorts1=df_confusion_allsorts %>% filter(!Prediction_Allsorts_new1=="ZZ.Unclassified")
nrow(df_confusion_allsorts1)
table(df_confusion_allsorts1$Prediction_Allsorts_new1==df_confusion_allsorts1$diag_raw_allsorts)
762/798

p4=gg_confusionMatrix(df_in=df_confusion_allsorts, 
                      x = "Prediction_Allsorts_new1",y = "diag_raw_allsorts",
                      y_lab = "Reference",x_lab = "Predicted",title = paste0("Allsorts (n=",nrow(df_confusion_allsorts),")"))

#ALL spice
levels_allspice=c(unique(df_in$Prediction_Allspice_new),"ETV6::RUNX1-like","ZNF384-like","KMT2A-like")
unique(df_in$diag_raw)[!unique(df_in$diag_raw) %in% levels_allspice]

df_confusion_allspice=df_in %>% filter(diag_raw %in% levels_allspice) %>% 
                        mutate(Prediction_Allspice_new1=ifelse(Prediction_Allspice_new=="Unclassified","ZZ.Unclassified",
                                                               ifelse(Prediction_Allspice_new=="ZNF384-like","ZNF384",
                                                                      ifelse(Prediction_Allspice_new=="KMT2A-like","KMT2A",
                                                                             ifelse(Prediction_Allspice_new=="ETV6::RUNX1-like","ETV6::RUNX1",Prediction_Allspice_new)))),
                               diag_raw_allspice=ifelse(diag_raw=="ZNF384-like","ZNF384",
                                                        ifelse(diag_raw=="KMT2A-like","KMT2A",
                                                               ifelse(diag_raw=="ETV6::RUNX1-like","ETV6::RUNX1",diag_raw))))



df_confusion_allspice1=df_confusion_allspice %>% filter(!Prediction_Allspice_new1=="ZZ.Unclassified")
nrow(df_confusion_allspice1)

table(df_confusion_allspice1$Prediction_Allspice_new1==df_confusion_allspice1$diag_raw_allspice)
580/623

p5=gg_confusionMatrix(df_in = df_confusion_allspice,
                      x = "Prediction_Allspice_new1",y = "diag_raw_allspice",
                      y_lab = "Reference",x_lab = "Predicted",title = paste0("Allspice (n=",nrow(df_confusion_allspice),")"))


plot_grid(p1,p2,p3,p4,p5,
          ncol = 2,
          labels = c("a","b","c","d","e"))

ggsave("../GEP_prediction/prediction_plots/confusion_plot_0403.pdf",width = 10,height = 16)



```




```{r,fig.width=32,fig.height=7}

table(df_pred_test$diag_mask==df_pred_test$pred_svm.LOO)/nrow(df_pred_test)

table(df_pred_test$pred_AllcatchR_mask==df_pred_test$diag_mask)/nrow(df_pred_test)

table(df_pred_test$pred_Allsorts_mask==df_pred_test$diag_mask)/nrow(df_pred_test)

table(df_pred_test$pred_Allspice_mask==df_pred_test$diag_mask)/nrow(df_pred_test)

table(df_pred_test$pred_AllcatchR_mask)
table(df_pred_test$Prediction_AllcatchR)
table(df_pred_test$Prediction_AllcatchR_new)

table(df_pred_test$pred_Allsorts_mask)
table(df_pred_test$Prediction_Allsorts)
table(df_pred_test$Prediction_Allsorts_new)

table(df_pred_test$pred_Allspice_mask)
table(df_pred_test$Prediction_Allsorts)
table(df_pred_test$Prediction_Allsorts_new)


```


```{r BALL subtyping for reference,fig.width=7,fig.height=5}
obj_=readRDS("/scratch/zuhu/project/ZhaohuiGu/SingleCellSeq_PublicData/human1M/dir_obj/obj_top1000_9th.rds")

table(obj_$celltype)

DimPlot(obj_,group.by = "celltype",label = T)


df_celltype=get_barcode_df(obj_) %>% left_join(get_embedding_df(obj_,"umap")) %>% left_join(get_metadataVar(obj_,"celltype")) %>% mutate(celltype_raw=celltype)

obj_$celltype_raw=df_celltype$celltype_raw

dir_out="/scratch/zuhu/project/ZhaohuiGu/SingleCellSeq_PublicData/human1M/ref_20celltypes/BALL_subtyping/"

id="ref_20celltypes"

p1=get_plot(levelsIn = c("CLP"),label = "CLP",label_file = "CLP")
p2=get_plot(levelsIn = c("Pro-B1"),label = "Pro-B1",label_file = "ProB1")
p3=get_plot(levelsIn = c("Pro-B2"),label = "Pro-B2",label_file = "ProB2")
p4=get_plot(levelsIn = c("Pre-B1"),label = "Pre-B1",label_file = "PreB1")
p5=get_plot(levelsIn = c("Pre-B2"),label = "Pre-B2",label_file = "PreB2")
p6=get_plot(levelsIn = c("Immat-B"),label = "Immat-B",label_file = "ImmatB")
p7=get_plot(levelsIn = c("Mature-B"),label = "Mature-B",label_file = "MatureB")
p8=get_plot(levelsIn = c("Plasma_cells"),label = "Plasma_cells",label_file = "Plasma_cells")



plot_grid(p1,p2,p3,p4,p5,p6,p7,p8,ncol = 1)


ggsave(paste0(dir_out,"BALL_subtyping_new.",id,".pdf"),width = 33,height = 60,limitsize = FALSE)

dev.off()
cat()
  
```











